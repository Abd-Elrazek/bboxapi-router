apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion bboxapiCompileSdkVersion
    buildToolsVersion bboxapiBuildToolVersion

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion bboxapiCompileSdkVersion
        versionCode 1
        versionName projectVersion
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile "com.github.kittinunf.fuel:fuel-android:$fuelAndroidVersion"
    compile "com.google.code.gson:gson:$gsonVersion"
    compile(project(':bboxapi')) {
        exclude group: 'com.github.kittinunf.fuel'
    }
}

group = 'fr.bmartel'
version = projectVersion

def libName = 'bboxapi-android'

bintray {
    user = "$System.env.BINTRAY_USER"
    key = "$System.env.BINTRAY_KEY"

    configurations = ['archives']

    dryRun = false //Whether to run this as dry-run, without deploying
    publish = true //If version should be auto published after an upload

    pkg {
        repo = 'maven'
        name = libName
        desc = projectDescription
        websiteUrl = projectSite
        issueTrackerUrl = projectIssueTracker
        vcsUrl = projectRepo
        licenses = projectLicenses
        labels = projectLabels
        publicDownloadNumbers = true

        version {
            name = projectVersion
            vcsTag = projectVersion

            gpg {
                sign = true
                passphrase = "$System.env.GPG_PASSPHRASE"
            }

            mavenCentralSync {
                sync = false
                //Optional (true by default). Determines whether to sync the version to Maven Central.
                user = "$System.env.MAVEN_CENTRAL_USER_TOKEN" //OSS user token
                password = "$System.env.MAVEN_CENTRAL_PASSWORD" //OSS user password
                close = '1'
                //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
            }
        }
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                description projectDescription
                packaging 'aar'
                name libName
                url projectSite
                licenses {
                    license {
                        name projectLicense
                        url projectLicensePath
                    }
                }
                developers {
                    developer {
                        id 'bertrandmartel'
                        name 'Bertrand Martel'
                        email 'bmartel.fr@gmail.com'
                    }
                }
                scm {
                    connection projectRepo
                    developerConnection projectRepo
                    url projectSite
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}